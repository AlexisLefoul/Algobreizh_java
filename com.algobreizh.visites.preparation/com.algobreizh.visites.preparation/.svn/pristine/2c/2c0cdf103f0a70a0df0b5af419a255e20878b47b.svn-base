package com.algobreizh.visites.preparation.swing;

import java.awt.Component;
import java.awt.FlowLayout;
import java.io.IOException;
import java.util.Collection;
import java.util.Iterator;
import java.util.Map;

import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

import com.algobreizh.visites.preparation.core.lib.Client;
import com.algobreizh.visites.preparation.core.lib.Rdv;
import com.algobreizh.visites.preparation.data.BddClients;
import com.algobreizh.visites.preparation.data.BddRDV;

public class UiSwing extends JFrame {
	
	static JButton btnAdd = new JButton("Ajouter");
	static JButton btnUpd = new JButton("Modifier");
	static JButton btnDel = new JButton("Supprimer");
	
	 public UiSwing() {
	        
	        setTitle("Algobreizh Visites 0.3.3");
	        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	        
	    } 	
	 
	 public static  Component setUI() throws IOException {

			// retourne le JTabbedPane qui contient les deux tableaux

			JScrollPane scrollPane1 = new JScrollPane(setTableClients());
			JScrollPane scrollPane2 = new JScrollPane(setTableRdvs());

			JTabbedPane jtp = new JTabbedPane();

			JPanel jp1 = new JPanel();
			JPanel jp2 = new JPanel();

			jtp.addTab("Clients", jp1);
			jtp.addTab("Rendez-vous", jp2);

			

			JPanel buttonPanel = new JPanel();

			BoxLayout boxLayout1 = new BoxLayout(buttonPanel, BoxLayout.Y_AXIS);
			buttonPanel.setLayout(boxLayout1);
			buttonPanel.add(Box.createVerticalGlue());

			buttonPanel.add(btnAdd);
			buttonPanel.add(Box.createVerticalStrut(10));
			buttonPanel.add(btnUpd);
			buttonPanel.add(Box.createVerticalStrut(10));
			buttonPanel.add(btnDel);

			jp2.add(buttonPanel);

			jp1.add(scrollPane1);
			jp2.add(scrollPane2);

			return jtp;

		}

		public static JTable setTableClients() throws IOException {

			Map<String,Client> clients = BddClients.all();

			/* génération du tableau clients */
			String col1[] = { "Id", "Nom", "Prenom", "Adresse", "CodePostal",
					"Ville" };
			DefaultTableModel tableModelclients = new DefaultTableModel(col1, 0);
			final JTable tableclients = new JTable(tableModelclients);
			
		

			for (Iterator<Client> iterator = clients.values().iterator(); iterator.hasNext();) {
				Client client = iterator.next();

				String Id = client.getId();
				String Nom = client.getNom();
				String Prenom = client.getPrenom();
				String Adresse = client.getAdresse();
				String CodePostal = client.getCodePostal();
				String Ville = client.getVille();

				Object[] data1 = { Id, Nom, Prenom, Adresse, CodePostal, Ville };

				tableModelclients.addRow(data1);
			}

			tableclients.setRowSelectionAllowed(true);

			/*
			 * Création de l'évènement d'affichage de la liste des informations du
			 * client au clic du client
			 */

			ListSelectionModel SelectionModel = tableclients.getSelectionModel();
			SelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

			SelectionModel.addListSelectionListener(new ListSelectionListener() {

				@Override
				public void valueChanged(ListSelectionEvent e) {
					String selectedClient = null;
					int[] selectedRows = tableclients.getSelectedRows();
					int selectedCols = 0;

					for (int i = 0; i < selectedRows.length; i++) {

						selectedClient = (String) tableclients.getValueAt(
								selectedRows[i], 0);/* 0 correspond à l'id */
					}
					System.out.println("Selected: " + selectedClient);
				}

			});

			return tableclients;
		}

		public static JTable setTableRdvs() throws IOException {

			Map<Integer,Rdv> rdvs = BddRDV.all();

			/* génération du tableau pour les rdv */

			String col2[] = { "Id", "Semaine", "nom", "prénom", "Date", "lieu" };
			DefaultTableModel tableModelrdvs = new DefaultTableModel(col2, 0);
			final JTable tablerdv = new JTable(tableModelrdvs);

			for (Iterator<Rdv> iterator = rdvs.values().iterator(); iterator.hasNext();) {
				Rdv rdv = iterator.next();

				int Id = rdv.getId();
				int Semaine = rdv.getSemaine();
				String Nom = rdv.getNom();
				String Prenom = rdv.getPrenom();
				String Date = rdv.getDate();
				String lieu = rdv.getLieu();

				Object[] data2 = { Id, Semaine, Nom, Prenom, Date, lieu };

				tableModelrdvs.addRow(data2);

			}
			System.out.println(tablerdv);
			return tablerdv;

		}

}
